name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths: ["viatab-backend/**", ".github/workflows/backend-ci.yml"]
  pull_request:
    branches: [main]
    paths: ["viatab-backend/**"]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Verify backend directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Backend directory exists: $(test -d viatab-backend && echo 'yes' || echo 'no')"
          if [ -d viatab-backend ]; then
            echo "Backend directory contents:"
            ls -la viatab-backend/
            echo "pom.xml exists: $(test -f viatab-backend/pom.xml && echo 'yes' || echo 'no')"
            echo "mvnw exists: $(test -f viatab-backend/mvnw && echo 'yes' || echo 'no')"
          fi

      - name: Run tests
        working-directory: ./viatab-backend
        run: ./mvnw clean test
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres

      - name: Generate test report
        working-directory: ./viatab-backend
        run: ./mvnw jacoco:report

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./viatab-backend/target/site/jacoco/jacoco.xml
          flags: backend
          name: backend-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

      - name: Run code quality analysis
        working-directory: ./viatab-backend
        run: ./mvnw checkstyle:check
        continue-on-error: true

      - name: Build application
        working-directory: ./viatab-backend
        run: ./mvnw clean package -DskipTests

      - name: Build Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/viatab-backend:${{ github.sha }} ./viatab-backend
          docker tag ghcr.io/${{ github.repository_owner }}/viatab-backend:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/viatab-backend:latest

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/viatab-backend:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/viatab-backend:latest
