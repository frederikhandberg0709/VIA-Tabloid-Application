name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: ['backend/**', '.github/workflows/backend-ci.yml']
  pull_request:
    branches: [ main ]
    paths: ['backend/**']

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests
      working-directory: ./backend
      run: ./mvnw clean test
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
    
    - name: Generate test report
      working-directory: ./backend
      run: ./mvnw jacoco:report
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage
    
    - name: Run code quality analysis
      working-directory: ./backend
      run: ./mvnw checkstyle:check spotbugs:check
      continue-on-error: true
    
    - name: Build application
      working-directory: ./backend
      run: ./mvnw clean package -DskipTests
    
    - name: Build Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t ${{ secrets.DOCKER_REGISTRY }}/viatab-backend:${{ github.sha }} ./backend
        docker tag ${{ secrets.DOCKER_REGISTRY }}/viatab-backend:${{ github.sha }} ${{ secrets.DOCKER_REGISTRY }}/viatab-backend:latest
    
    - name: Login to Docker Registry
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push ${{ secrets.DOCKER_REGISTRY }}/viatab-backend:${{ github.sha }}
        docker push ${{ secrets.DOCKER_REGISTRY }}/viatab-backend:latest
        
